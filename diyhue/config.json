{
	"name": "diyHue",
	"version": "1.1.4",
	"slug": "diyhue",
	"description": "his project emulates a Philips Hue Bridge that is able to control ZigBee lights (using Raspbee module, original Hue Bridge or IKEA Trådfri Gateway), Mi-Light bulbs (using MiLight Hub), Neopixel strips (WS2812B and SK6812) and any cheap ESP8266 based bulb by replacing the firmware with a custom one. It is written in Python and will run on all small devices such as the Raspberry Pi. Arduino sketches are provided for the Hue Dimmer Switch, Hue Tap Switch and Hue Motion Sensor. Lights are two-way synchronized so any change made from original Philips/Trådfri sensors and switches will also be applied to the bridge emulator",
	"webui": "http://[HOST]:[PORT:80]",
	"panel_icon": "mdi:home-lightbulb",
	"startup": "application",
	"arch": ["armhf", "armv7", "aarch64", "amd64", "i386"],
	"ports": {
		"80/tcp": 80,
		"443/tcp": 443,
		"1900/udp": 1901,
		"1982/udp": 1982,
		"2100/udp": 2100
	},
	"ports_description": {
		"80/tcp": "Hue API",
		"443/tcp": "Hue API SSL",
		"1900/udp": "ssdp discover",
		"1982/udp": "Yeelight detection",
		"2100/udp": "Hue Entertainment"
	},
	"boot": "auto",
	"auth_api": true,
	"hassio_api": true,
	"hassio_role": "default",
	"host_network": true,
	"auto_uart": true,
	"map": ["config:rw", "share:rw"],
	"options": {
		"config_path": "/config/diyhue",
		"mac": "XX:XX:XX:XX:XX",
		"debug": false,
		"deconz_ip": "192.168.0.0"
	},
	"schema": {
		"config_path": "str",
		"mac": "str",
		"debug": "bool",
		"deconz_ip": "str"
	}
}
